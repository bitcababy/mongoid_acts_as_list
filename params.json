{"name":"Mongoid ActsAsList","body":"ActsAsList for Mongoid\r\n=====================\r\n\r\n## Description\r\n\r\nMongoid::ActsAsList provides the ability of ordering and sorting a number of objects in a list using Mongoid as an ODM.\r\n\r\n[![Build Status](https://secure.travis-ci.org/olivoil/mongoid_acts_as_list.png)](http://travis-ci.org/olivoil/mongoid_acts_as_list)\r\n[![Dependency Status](https://gemnasium.com/olivoil/mongoid_acts_as_list.png)](https://gemnasium.com/olivoil/mongoid_acts_as_list)\r\n\r\n## Install\r\n\r\nPlace the following in your Gemfile:\r\n\r\n``` ruby\r\ngem 'mongoid_acts_as_list', '~> 0.0.5'\r\n```\r\n\r\nThen run `bundle install`\r\n\r\n\r\n## Configure\r\n\r\nConfigure defaults values used by ActsAsList:\r\n\r\n\r\n``` ruby\r\nMongoid::ActsAsList.configure do |config|\r\n\r\n  # These are the default values. Modify as you see fit:\r\n\r\n  config.default_position_field = :position\r\n  config.start_list_at = 0\r\n\r\nend\r\n```\r\n\r\nMake sure it is loaded before calling ` acts_as_list `. You can place this code in an initializer file for example.\r\n\r\n## Use\r\n\r\nActivate ActsAsList in your models.\r\n\r\nIn has_many/belongs_to associations, you will need to provide a `:scope` option:\r\n\r\n``` ruby\r\nclass List\r\n  include Mongoid::Document\r\n\r\n  has_many :items\r\nend\r\n\r\nclass Item\r\n  include Mongoid::Document\r\n  include Mongoid::ActsAsList\r\n\r\n  belongs_to :list\r\n  acts_as_list scope: :list\r\nend\r\n```\r\n\r\nOn embedded document, the scope option is not necessary:\r\n\r\n``` ruby\r\nclass List\r\n  include Mongoid::Document\r\n\r\n  embeds_many :items\r\nend\r\n\r\nclass Item\r\n  include Mongoid::Document\r\n  include Mongoid::ActsAsList\r\n\r\n  embedded_in :list\r\n  acts_as_list\r\nend\r\n```\r\n\r\nThe public API is composed of the following methods.\r\nAll of the API from the original ActiveRecord ActsAsList gem is also available.\r\nCheck the source and [documentation](http://rubydoc.info/github/olivoil/mongoid_acts_as_list/master/frames) to find out more!\r\n\r\n\r\n``` ruby\r\n## Class Methods\r\n\r\nlist.items.order_by_position #=> returns all items in `list` ordered by position\r\n\r\n## Instance Methods\r\n\r\nitem.move to: 2              #=> moves item to position number 2\r\nitem.move to: :start         #=> moves item to the first position in the list\r\nitem.move to: :end           #=> moves item to the last position in the list\r\nitem.move before: other_item #=> moves item before other_item\r\nitem.move after:  other_item #=> moves item after other_item\r\nitem.move forward:  3        #=> move item 3 positions closer to the end of the list\r\nitem.move backward: 2        #=> move item 2 positions closer to the start of the list\r\nitem.move :forward           #=> same as item.move(forward:  1)\r\nitem.move :backward          #=> same as item.move(backward: 1)\r\n\r\nitem.in_list?                #=> true\r\nitem.remove_from_list        #=> sets the position to nil and reorders other items\r\nitem.not_in_list?            #=> true\r\n\r\nitem.first?\r\nitem.last?\r\n\r\nitem.next_item               #=> returns the item immediately following `item` in the list\r\nitem.previous_item           #=> returns the item immediately preceding `item` in the list\r\n\r\n## Original ActsAsList #move_ methods\r\n\r\nitem.move_higher             #=> same as item.move(:backward)\r\nitem.move_lower              #=> same as item.move(:forward)\r\nitem.move_to_top             #=> same as item.move(to: :start)\r\nitem.move_to_bottom          #=> same as item.move(to: :end)\r\nitem.increment_position      #=> increments the position number without affecting other items\r\nitem.decrement_position      #=> decrements the position number without affecting other items\r\nitem.insert_at 3             #=> same as item.move(to: 3)\r\n```\r\n\r\n\r\n\r\n## Requirements\r\n\r\nTested with Mongoid 2.4.6 on Ruby 1.9.3-p125, Rails 3.2.2, and Mongo 2.x\r\n\r\n\r\n\r\n## Contributing\r\n \r\n- Open up an issue on Github\r\n- Fork the project\r\n- Start a feature/bugfix branch\r\n- Start writing tests\r\n- Commit and push until all tests are green and you are happy with your contribution\r\n- Send a pull request mentionning the issue number (i.e. \"Fixes #123\")\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2012 Olivier Melcher, released under the MIT license","tagline":"Mongoid. Acts. As. List.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}